{"version":3,"sources":["webpack:///webpack/bootstrap ec026a3cc52588c9e51c","webpack:///./src/models/player.js","webpack:///./src/models/pokemon.js","webpack:///./src/views/map.js","webpack:///./src/views/game.js","webpack:///./src/app.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AChEA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,wB;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACbA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,M;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA,qB;;;;;;;;;;;;AClLA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK,EAAE;AACP;AACA;;AAEA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,gBAAgB,mBAAmB;AACnC;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,gCAAgC;AAChC,oBAAoB;AACpB,kCAAkC;AAClC;AACA;AACA,oBAAoB;;AAEpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,KAAK;AACrD;AACA,2DAA2D,KAAK;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA,0CAA0C;;;;;AAK1C,wC;;;;;;;;;;;;;;;ACrKA;AACA;AACA;AACA;;AAEA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;;;AAIA,sB","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ec026a3cc52588c9e51c","var Player = function(){\n  this.name = \"\";\n  this.pokedex = [];//unlimited\n  this.pokemonOnHand = []//4x\n  this.pic = \"\"//url\n  this.x = 2//600\n  this.y = 2//600\n\n}\n\nPlayer.prototype = {\n  getPokemon: function(pokemon, source, destination){\n    this.destination.push(source[pokemon]);\n  }\n\n};\n\nmodule.exports = Player;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/models/player.js\n// module id = 0\n// module chunks = 0","var Pokemon = function(pokemonObj){\n  this.name = pokemonObj.name;\n  this.id = pokemonObj.id;\n  this.attack = pokemonObj.attack;\n  this.defense = pokemonObj.defense;\n  this.hp = pokemonObj.hp;\n  this.front_picture = pokemonObj.front_picture;\n  this.back_picture = pokemonObj.back_picture;\n  this.type = pokemonObj.type;\n  this.move = pokemonObj.move;\n  this.fightHp = pokemonObj.fightHp;\n}\n\nmodule.exports = Pokemon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/models/pokemon.js\n// module id = 1\n// module chunks = 0","//// HANDLE MOVEMENT ON MAP ////////////\nvar Game = require('./game');\n\n//// need to require player for coordinates ////////\nvar Map = function(pokemonData, Player, Pokemon) {\n  var game = new Game(pokemonData, Player, Pokemon);\n  var canvas = document.querySelector(\"#map\");\n  var context = canvas.getContext('2d');\n  var x = 300;\n  var y = 200;\n  var increment = 10;\n\n  var ash = document.createElement('img');\n  ash.src = \"/img/ash.png\";\n  var ashWidth = 40;\n  var ashHeight = ashWidth;\n  var house = document.createElement('img');\n  house.src = \"/img/house.png\";\n  var gym = document.createElement('img');\n  gym.src = \"/img/gym.png\";\n  var grass = document.createElement('img');\n  grass.src = \"/img/grass.png\";\n  var pavement = document.createElement('img');\n  pavement.src = \"/img/pavement.png\";\n  var upButton = document.querySelector('#up-button');\n  var downButton = document.querySelector('#down-button');\n\n  upButton.onclick = function(){\n    if (y <= 20) {\n      moveAsh(0, 0);\n    }\n    else if (y === 420 && 20 <= x && x <= 160) {\n      moveAsh(0, 0);\n    }\n    else if (y === 190 && 20 <= x && x <= 230) {\n      moveAsh(0, 0);\n    }\n    else if (y === 190 && 350 <= x && x <= 560) {\n      moveAsh(0, 0);\n    }\n    else {\n      moveAsh(0, -increment);\n    }\n  }\n\n  loadCanvas = function() {\n\n    pavement.onload = function() {\n      context.drawImage(this, 0, 0, 580, 460);\n      ash.onload = function() {\n        context.drawImage(this, x - 20, y - 20, ashWidth, ashHeight);\n      };\n      house.onload = function() {\n        context.drawImage(this, 0, 270, 150, 130);\n      };\n      gym.onload = function() {\n        context.drawImage(this, 0, 0, 220, 170);\n        context.drawImage(this, 320, 0, 220, 170);\n      };\n      grass.onload = function() {\n        context.drawImage(this, 540, 400, 40, 60);\n      };\n      drawMap();\n      context.drawImage(ash, x - 20, y - 20, ashWidth, ashHeight);\n    }; \n    \n  };\n\n  drawMap = function() {\n    context.drawImage(pavement, 0, 0, 580, 460);\n    context.drawImage(house, 0, 270, 150, 130);\n    context.drawImage(gym, 0, 0, 220, 170);\n    context.drawImage(gym, 360, 0, 220, 170);\n    context.drawImage(grass, 540, 400, 40, 60);\n    context.drawImage(grass, 500, 400, 40, 60);\n    context.drawImage(grass, 460, 400, 40, 60);\n    context.drawImage(grass, 420, 400, 40, 60);\n    context.drawImage(grass, 380, 400, 40, 60);\n    context.drawImage(grass, 340, 400, 40, 60);\n    context.drawImage(grass, 300, 400, 40, 60);\n    context.drawImage(grass, 260, 400, 40, 60);\n    context.drawImage(grass, 540, 340, 40, 60);\n    context.drawImage(grass, 500, 340, 40, 60);\n    context.drawImage(grass, 460, 340, 40, 60);\n    context.drawImage(grass, 420, 340, 40, 60);\n    context.drawImage(grass, 380, 340, 40, 60);\n    context.drawImage(grass, 340, 340, 40, 60);\n    context.drawImage(grass, 300, 340, 40, 60);\n    context.drawImage(grass, 260, 340, 40, 60);\n    context.drawImage(grass, 540, 280, 40, 60);\n    context.drawImage(grass, 500, 280, 40, 60);\n    context.drawImage(grass, 460, 280, 40, 60);\n    context.drawImage(grass, 420, 280, 40, 60);\n    context.drawImage(grass, 380, 280, 40, 60);\n    context.drawImage(grass, 340, 280, 40, 60);\n    context.drawImage(grass, 300, 280, 40, 60);\n    context.drawImage(grass, 260, 280, 40, 60);\n  };\n\n  var moveAsh = function(xInc, yInc) {\n    drawMap();\n    context.drawImage(ash, x - 20 + xInc, y - 20 + yInc, ashWidth, ashHeight);\n    x += xInc;\n    y += yInc;\n    console.log(x,y);\n  };\n\n  document.onkeydown = function(event) {\n    console.log(event.keyCode);\n    console.log(upButton.onclick);\n    if (event.keyCode === 39) {\n      // right\n      if (x >= 560) {\n        moveAsh(0, 0);\n      }\n      else if (x === 340 && 20 <= y && y <= 180) {\n        moveAsh(0, 0);\n      }\n      else{\n        moveAsh(increment, 0);\n      }\n    }\n\n    if (event.keyCode === 37) {\n      // left\n      if (x <= 20) {\n        moveAsh(0, 0);\n      }\n      else if (x === 240 && 20 <= y && y <= 180) {\n        moveAsh(0, 0);\n      }\n      else if (x === 170 && 260 <= y && y <= 410) {\n        moveAsh(0, 0);\n      }\n      else{\n        moveAsh(-increment, 0);\n      }\n    }\n\n    if (event.keyCode === 38) {\n      // up\n      if (y <= 20) {\n        moveAsh(0, 0);\n      }\n      else if (y === 420 && 20 <= x && x <= 160) {\n        moveAsh(0, 0);\n      }\n      else if (y === 190 && 20 <= x && x <= 230) {\n        moveAsh(0, 0);\n      }\n      else if (y === 190 && 350 <= x && x <= 560) {\n        moveAsh(0, 0);\n      }\n      else {\n        moveAsh(0, -increment);\n      }\n    }\n\n    if (event.keyCode === 40) {\n      // down\n      if (y >= 440) {\n        moveAsh(0, 0);\n      }\n      else if (y === 250 && 20 <= x && x <= 160) {\n        moveAsh(0, 0);\n      }\n      else {\n        moveAsh(0, increment);\n        console.log(game.calcDamage(game.unusedPokemon[2], game.unusedPokemon[77]));\n\n      }\n    }\n  };\n\n  loadCanvas();\n\n};\n\nmodule.exports = Map;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/map.js\n// module id = 2\n// module chunks = 0","var Game = function(data, Player, Pokemon){\n  console.log('data',data);\n\n  this.unusedPokemon = data;\n  this.player = new Player;\n  this.opponant = new Player;\n\n};\n\nGame.prototype = {\n\n  sortPokemon: function(unusedPokemon){\n    unusedPokemon.sort(function (a, b) {\n      return parseFloat(a.id) - parseFloat(b.id);\n    })},\n    // console.log('array sorted', unusedPokemon);\n    // console.log('array sorted', unusedPokemon.length);\n\n    playerPicksPokemon: function(pokeName){\n      for (var i = 0; i < unusedPokemon.length; i++) {\n        if (unusedPokemon[i].name === pokeName) {\n          player.pokemonOnHand.push(unusedPokemon[i]);\n        }\n      }\n    },\n\n    populateOpponant: function(opponant, numOfEnemies){\n      for(i = 0; i <= numOfEnemies; i++){\n        var takenPokemon = unusedPokemon.splice(Math.floor(Math.random()*unusedPokemon.length), 1)[0];\n        takenPokemon.fightHp = takenPokemon.hp;\n        opponant.pokemonOnHand.push(takenPokemon);\n      }\n    },\n\n    calcDamage: function(attaker, defender){\n      var base = 20;\n      var bonus = Math.round((attaker.attack - defender.defense)/3);\n      console.log('bonus', bonus);\n      var random = Math.random()*(1.2 - 0.8) + 0.8;\n\n      console.log('rand', random);\n      var damage = Math.round(base * random) + bonus;\n\n      if (damage < 0) {\n        damage = 0;\n      }\n\n      return damage;\n    }\n\n    // playerPicksPokemon(\"pikachu\");\n    // populateOpponant(opponant, 3);\n\n    // console.log('opponant: number of pokemon', opponant.pokemonOnHand.length, opponant.pokemonOnHand[0], opponant.pokemonOnHand[1], opponant.pokemonOnHand[2] );\n    // console.log('player: number of pokemon', player.pokemonOnHand.length, 'pokemon name', player.pokemonOnHand[0]);\n    // console.log('test damage calc', unusedPokemon[2].attack, unusedPokemon[3].defense);\n    // console.log('test damage', calcDamage(unusedPokemon[2], unusedPokemon[3]));\n  };\n\n\nmodule.exports = Game;\n\n// Game.prototype = {\n\n\n  //   //finds which trainer in fight has least pokemon to check if 0 (instead of checking both in fight)\n  //   getLeastPokemon: function(playersPokemonAlive, opponantsPokemonAlive){\n    //     var leastPokemon = 0;\n    //     if(playersPokemonAlive.length > opponantsPokemonAlive.length){\n      //       leastPokemon = opponant.pokemonOnHand.length;\n      //     } else {\n        //       leastPokemon = player.pokemonOnHand.length;\n        //     };\n        //     return leastPokemon\n        //   },\n        //   //finds which pokemon in fight has least health to check if 0 (instead of checking both in fight)\n        //   getLeastHealth: function(playersFightingPokemon, opponantsFightingPokemon){\n          //     var leastHealth =100;\n          //     if(playersFightingPokemon.fightHp > opponantsFightingPokemon.fightHp){\n            //       leastHp = {fighter: 'opponant', pokemon: opponantsFightingPokemon.name}\n            //     } else {\n              //       leastHp = {fighter: 'player', pokemon: playersFightingPokemon.name}\n              //     };\n              //     return leastHp;\n              //   },\n\n              //   fight: function(player, opponant, numOfEnemies){\n\n                //     //create opponant\n                //     var opponant = new Player;\n                //     console.log('opponant', opponant);\n                //     //push random unused Pokemon to opponant\n                //     opponant.pokemonOnHand = populateOpponant(opponant, numOfEnemies);\n                //     console.log('opponant has ' + opponant.pokemonOnHand.length + ' pokemon');\n                //     //pokemon left able to fight\n                //     var playersPokemonAlive = player.pokemonOnHand;\n                //     var opponantsPokemonAlive = opponant.pokemonOnHand;\n                //     //pokemon currently fighting\n                //     var playersFightingPokemon = playersPokemonAlive[0];\n                //     console.log('player chose ' + playersFightingPokemon.name);\n                //     //todo: update message and setTimeout until button pressed\n                //     var opponantsFightingPokemon = opponantsPokemonAlive[0];\n                //     console.log('opponant chose ' + opponantsFightingPokemon.name);\n                //     //todo: update message and setTimeout until button pressed\n                //     //set fight hp so original hp is not overwritten during fight\n                //     playersFightingPokemon.fightHp =  playersFightingPokemon.hp;\n                //     opponantsFightingPokemon.fightHp =  opponantsFightingPokemon.hp;\n\n                //     //number of pokemon of currently loosing player - if 0 fight is over\n                //     var leastPokemonLeft = getLeastPokemon(playersPokemonAlive, opponantsPokemonAlive);\n                //     // finds pokemon of least health & returns an object containing pokemon of least health and their owner, so can be removed from alive pokemon when health becomes zero. Then next is used\n                //     var leastHp = getLeastHealth(playersFightingPokemon, opponantsFightingPokemon);\n                //     //player takes first turn\n                //     var playersTurn = true;\n                //     //unless someone has no pokemon do loop\n                //     for(i = leastPokemonLeft; i>0; i = leastPokemonLeft){\n                  //       //unless pokemon has no health do loop\n                  //       for(j = leastHp.pokemon.fightHp; j>0; j = leastHp.pokemon.fightHp){\n                    //         //choose who attacks\n                    //         if (playersTurn){\n                      //           //todo: update message and setTimeout until button pressed\n                      //           makeAttack(playersFightingPokemon,opponantsFightingPokemon);\n                      //           opponantsFightingPokemon.fightHp -= damage;\n                      //           console.log(playersFightingPokemon.name + ' used ' + playersFightingPokemon.move + ' and did ' + damage + ' damage');\n                      //           //todo: update message and setTimeout until button pressed\n                      //           playersTurn = false;\n                      //         }else if(!playersTurn){\n                        //           makeAttack(opponantsFightingPokemon,playersFightingPokemon);\n                        //           playersFightingPokemon.fightHp -= damage;\n                        //           console.log(playersFightingPokemon.name + ' used ' + playersFightingPokemon.move + ' and did ' + damage + ' damage');\n                        //           //todo: update message and setTimeout until button pressed\n                        //           playersTurn = true;\n                        //         } else{\n                          //           console.log('error taking turns');\n                          //         }\n                          //         //update pokemon with least health\n                          //         leastHp = getLeastHealth(playersFightingPokemon, opponantsFightingPokemon);\n                          //         if (leastHp.pokemon.fightHp <= 0){\n                            //           console.log(leastHp.pokemon.name + 'fell unconcious');\n                            //           //todo: update message and setTimeout until button pressed\n                            //         }\n                            //         //end of hp check loop\n                            //       }\n                            //       //when a pokemon looses all health remove from alive pokemon\n                            //       if (leastHp.fighter == 'player'){\n                              //         playersPokemonAlive.shift()\n                              //         //uses next pokemon (still first because old first is removed)\n                              //         playersFightingPokemon = playersPokemonAlive[0];\n                              //       }else if(leastHp.fighter == 'opponant'){\n                                //         opponantsPokemonAlive.shift()\n                                //         opponantsFightingPokemon = opponantsPokemonAlive[0];\n                                //       }else{\n                                  //         console.log('error removing unconcious pokemon');\n                                  //       }\n                                  //       //update player with least pokemon\n                                  //       leastPokemonLeft = getLeastPokemon(playersPokemonAlive, opponantsPokemonAlive);\n                                  //     }\n                                  //   },\n                                  //   makeAttack: function(attaker, defender){\n                                    //     defender.fightHp = defender.fightHp - calcDamage(attaker, defender);\n                                    //     return defender.fightHp\n                                    //   },\n\n\n\n\n                                    // } \n\n\n\n\n\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/game.js\n// module id = 4\n// module chunks = 0","\nvar Player = require('./models/player');\nvar Pokemon = require('./models/pokemon');\nvar Map = require('./views/map');\nvar UI = require('./views/ui');\n\nvar app = function() {\n \n  // new UI();\n \n\n  var makeRequest = function(url, callback){\n    var request = new XMLHttpRequest();\n    request.open(\"GET\", url);\n    request.onload = callback;\n    request.send();\n  };\n\n  var allPokemon = function(){\n    makeRequest(\"http://localhost:3000/sourcePokemons\", function(){\n      if(this.status !== 200) return;\n        var jsonString = this.responseText;\n        var jsonObject = JSON.parse(jsonString);\n\n\n        var pokemonData = jsonObject;\n        new Map(pokemonData, Player, Pokemon);\n      });\n  }\n\n  allPokemon();\n}\n\n\n\nwindow.onload = app();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app.js\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}