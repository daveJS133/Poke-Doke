{"version":3,"sources":["webpack:///webpack/bootstrap b038edc3bbd8102aa59a","webpack:///./src/models/game.js","webpack:///./src/models/player.js","webpack:///./src/app.js","webpack:///./src/models/pokemon.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;AChEA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,mBAAmB;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;;AAGA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,oBAAoB;AACpB,QAAQ;AACR,oBAAoB;AACpB;AACA;AACA,MAAM;;AAEN;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,KAAK;AACrC;AACA,yCAAyC,KAAK;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;;;;;AAKN,I;;;;;;AAMA;;;;;;;;;AC/KA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,wB;;;;;;;ACjBA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;;;AAIA;;;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 244);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b038edc3bbd8102aa59a","var Player = require('./player');\nvar Pokemon = require('./pokemon');\n\n\nvar game = function(data){\n  console.log('data',data);\n\n  var unusedPokemon = data;\n  console.log(unusedPokemon);\n\n  var player = new Player;\n  console.log('player:', player);\n\n  var opponant = new Player;\n  console.log('opponant:', opponant);\n\n  unusedPokemon.sort(function (a, b) {\n      return parseFloat(a.id) - parseFloat(b.id);\n  });\n  console.log('array sorted', unusedPokemon);\n  console.log('array sorted', unusedPokemon.length);\n\n  var playerPicksPokemon = function(pokeName){\n    for (var i = 0; i < unusedPokemon.length; i++) {\n      if (unusedPokemon[i].name === pokeName) {\n        player.pokemonOnHand.push(unusedPokemon[i]);\n      }\n    }\n  };\n\n  var populateOpponant = function(opponant, numOfEnemies){\n    for(i = 0; i <= numOfEnemies; i++){\n      var takenPokemon = unusedPokemon.splice(Math.floor(Math.random()*unusedPokemon.length), 1)[0];\n      takenPokemon.fightHp = takenPokemon.hp;\n      opponant.pokemonOnHand.push(takenPokemon);\n    }\n  }\n\n  var calcDamage = function(attaker, defender){\n    var base = 20;\n\n    var bonus = Math.round((attaker.attack - defender.defense)/3);\n    console.log('bonus', bonus);\n    var random = Math.random()*(1.2 - 0.8) + 0.8;\n\n    console.log('rand', random);\n    var damage = Math.round(base * random) + bonus;\n\n    if (damage < 0) {\n      damage = 0;\n    }\n\n    return damage;\n  }\n\n  // playerPicksPokemon(\"pikachu\");\n  // populateOpponant(opponant, 3);\n\n  console.log('opponant: number of pokemon', opponant.pokemonOnHand.length, opponant.pokemonOnHand[0], opponant.pokemonOnHand[1], opponant.pokemonOnHand[2] );\n  console.log('player: number of pokemon', player.pokemonOnHand.length, 'pokemon name', player.pokemonOnHand[0]);\n  console.log('test damage calc', unusedPokemon[2].attack, unusedPokemon[3].defense);\n  console.log('test damage', calcDamage(unusedPokemon[2], unusedPokemon[3]));\n}\n\n\n// Game.prototype = {\n\n\n//   //finds which trainer in fight has least pokemon to check if 0 (instead of checking both in fight)\n//   getLeastPokemon: function(playersPokemonAlive, opponantsPokemonAlive){\n//     var leastPokemon = 0;\n//     if(playersPokemonAlive.length > opponantsPokemonAlive.length){\n//       leastPokemon = opponant.pokemonOnHand.length;\n//     } else {\n//       leastPokemon = player.pokemonOnHand.length;\n//     };\n//     return leastPokemon\n//   },\n//   //finds which pokemon in fight has least health to check if 0 (instead of checking both in fight)\n//   getLeastHealth: function(playersFightingPokemon, opponantsFightingPokemon){\n//     var leastHealth =100;\n//     if(playersFightingPokemon.fightHp > opponantsFightingPokemon.fightHp){\n//       leastHp = {fighter: 'opponant', pokemon: opponantsFightingPokemon.name}\n//     } else {\n//       leastHp = {fighter: 'player', pokemon: playersFightingPokemon.name}\n//     };\n//     return leastHp;\n//   },\n\n//   fight: function(player, opponant, numOfEnemies){\n\n//     //create opponant\n//     var opponant = new Player;\n//     console.log('opponant', opponant);\n//     //push random unused Pokemon to opponant\n//     opponant.pokemonOnHand = populateOpponant(opponant, numOfEnemies);\n//     console.log('opponant has ' + opponant.pokemonOnHand.length + ' pokemon');\n//     //pokemon left able to fight\n//     var playersPokemonAlive = player.pokemonOnHand;\n//     var opponantsPokemonAlive = opponant.pokemonOnHand;\n//     //pokemon currently fighting\n//     var playersFightingPokemon = playersPokemonAlive[0];\n//     console.log('player chose ' + playersFightingPokemon.name);\n//     //todo: update message and setTimeout until button pressed\n//     var opponantsFightingPokemon = opponantsPokemonAlive[0];\n//     console.log('opponant chose ' + opponantsFightingPokemon.name);\n//     //todo: update message and setTimeout until button pressed\n//     //set fight hp so original hp is not overwritten during fight\n//     playersFightingPokemon.fightHp =  playersFightingPokemon.hp;\n//     opponantsFightingPokemon.fightHp =  opponantsFightingPokemon.hp;\n\n//     //number of pokemon of currently loosing player - if 0 fight is over\n//     var leastPokemonLeft = getLeastPokemon(playersPokemonAlive, opponantsPokemonAlive);\n//     // finds pokemon of least health & returns an object containing pokemon of least health and their owner, so can be removed from alive pokemon when health becomes zero. Then next is used\n//     var leastHp = getLeastHealth(playersFightingPokemon, opponantsFightingPokemon);\n//     //player takes first turn\n//     var playersTurn = true;\n//     //unless someone has no pokemon do loop\n//     for(i = leastPokemonLeft; i>0; i = leastPokemonLeft){\n//       //unless pokemon has no health do loop\n//       for(j = leastHp.pokemon.fightHp; j>0; j = leastHp.pokemon.fightHp){\n//         //choose who attacks\n//         if (playersTurn){\n//           //todo: update message and setTimeout until button pressed\n//           makeAttack(playersFightingPokemon,opponantsFightingPokemon);\n//           opponantsFightingPokemon.fightHp -= damage;\n//           console.log(playersFightingPokemon.name + ' used ' + playersFightingPokemon.move + ' and did ' + damage + ' damage');\n//           //todo: update message and setTimeout until button pressed\n//           playersTurn = false;\n//         }else if(!playersTurn){\n//           makeAttack(opponantsFightingPokemon,playersFightingPokemon);\n//           playersFightingPokemon.fightHp -= damage;\n//           console.log(playersFightingPokemon.name + ' used ' + playersFightingPokemon.move + ' and did ' + damage + ' damage');\n//           //todo: update message and setTimeout until button pressed\n//           playersTurn = true;\n//         } else{\n//           console.log('error taking turns');\n//         }\n//         //update pokemon with least health\n//         leastHp = getLeastHealth(playersFightingPokemon, opponantsFightingPokemon);\n//         if (leastHp.pokemon.fightHp <= 0){\n//           console.log(leastHp.pokemon.name + 'fell unconcious');\n//           //todo: update message and setTimeout until button pressed\n//         }\n//         //end of hp check loop\n//       }\n//       //when a pokemon looses all health remove from alive pokemon\n//       if (leastHp.fighter == 'player'){\n//         playersPokemonAlive.shift()\n//         //uses next pokemon (still first because old first is removed)\n//         playersFightingPokemon = playersPokemonAlive[0];\n//       }else if(leastHp.fighter == 'opponant'){\n//         opponantsPokemonAlive.shift()\n//         opponantsFightingPokemon = opponantsPokemonAlive[0];\n//       }else{\n//         console.log('error removing unconcious pokemon');\n//       }\n//       //update player with least pokemon\n//       leastPokemonLeft = getLeastPokemon(playersPokemonAlive, opponantsPokemonAlive);\n//     }\n//   },\n//   makeAttack: function(attaker, defender){\n//     defender.fightHp = defender.fightHp - calcDamage(attaker, defender);\n//     return defender.fightHp\n//   },\n  \n\n\n\n// } \n\n\n\n\n\nmodule.exports = game;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/models/game.js\n// module id = 134\n// module chunks = 0","var Player = function(){\n  this.name = \"\";\n  this.pokedex = [];//unlimited\n  this.pokemonOnHand = []//4x\n  this.pic = \"\"//url\n  this.x = 2//600\n  this.y = 2//600\n\n}\n\nPlayer.prototype = {\n  getPokemon: function(pokemon, source, destination){\n    this.destination.push(source[pokemon]);\n  }\n\n};\n\nmodule.exports = Player;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/models/player.js\n// module id = 135\n// module chunks = 0","var game = require('./models/game');\nvar Player = require('./models/player');\n\nvar app = function() {\n \n\n  var makeRequest = function(url, callback){\n    var request = new XMLHttpRequest();\n    request.open(\"GET\", url);\n    request.onload = callback;\n    request.send();\n  };\n\n  var allPokemon = function(){\n    makeRequest(\"http://localhost:3000/sourcePokemons\", function(){\n      if(this.status !== 200) return;\n        var jsonString = this.responseText;\n        var jsonObject = JSON.parse(jsonString);\n\n        var pokemonData = jsonObject;\n        game(pokemonData);\n      });\n  }\n\n  allPokemon();\n}\n\n\n\nwindow.onload = app();\n\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app.js\n// module id = 244\n// module chunks = 0","var Pokemon = function(pokemonObj){\n  this.name = pokemonObj.name;\n  this.id = pokemonObj.id;\n  this.attack = pokemonObj.attack;\n  this.defense = pokemonObj.defense;\n  this.hp = pokemonObj.hp;\n  this.front_picture = pokemonObj.front_picture;\n  this.back_picture = pokemonObj.back_picture;\n  this.type = pokemonObj.type;\n  this.move = pokemonObj.move;\n  this.fightHp = pokemonObj.fightHp;\n}\n\nmodule.exports = Pokemon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/models/pokemon.js\n// module id = 245\n// module chunks = 0"],"sourceRoot":""}