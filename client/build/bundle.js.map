{"version":3,"sources":["webpack:///webpack/bootstrap 7d7785fe8306c6c85c13","webpack:///./src/models/game.js","webpack:///./src/models/player.js","webpack:///./src/app.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;AChEA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,iBAAiB;AACjB,KAAK;AACL,iBAAiB;AACjB;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,KAAK;AAClC;AACA,sCAAsC,KAAK;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,cAAc,mBAAmB;AACjC;AACA;AACA;AACA;;AAEA;;;;;;AAMA,sB;;;;;;;ACtIA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,wB;;;;;;;ACjBA;;AAEA;AACA;;AAEA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 244);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7d7785fe8306c6c85c13","var Player = require('./player');\n\n\nvar Game = function(){\n  this.player = new Player();\n  this.unusedPokemon = [];\n  var self = this;\n}\n\nGame.prototype = {\n  makeRequest: function(url, callback){\n    var request = new XMLHttpRequest();\n    request.open(\"GET\", url);\n    request.onload = callback;\n    request.send();\n  },\n\n  allPokemon: function(callback){\n    this.makeRequest(\"http://localhost:3000/sourcePokemons\", function(){\n      if(this.status !== 200) return;\n        var jsonString = this.responseText;\n        var results = jsonString;\n        unusedPokemon = results;\n      });\n  },\n  //finds which trainer in fight has least pokemon to check if 0 (instead of checking both in fight)\n  getLeastPokemon: function(playersPokemonAlive, opponantsPokemonAlive){\n    var leastPokemon =0;\n    if(playersPokemonAlive.length > opponantsPokemonAlive.length){\n      leastPokemon = opponant.pokemonOnHand.length;\n    } else {\n      leastPokemon = player.pokemonOnHand.length;\n    };\n    return leastPokemon\n  },\n  //finds which pokemon in fight has least health to check if 0 (instead of checking both in fight)\n  getLeastHealth: function(playersFightingPokemon, opponantsFightingPokemon){\n    var leastHealth =100;\n    if(playersFightingPokemon.fightHp > opponantsFightingPokemon.fightHp){\n      leastHp = {fighter: 'opponant', pokemon: opponantsFightingPokemon.name}\n    } else {\n      leastHp = {fighter: 'player', pokemon: playersFightingPokemon.name}\n    };\n    return leastHp;\n  },\n\n  fight: function(player, opponant, numOfEnemies){\n    //create opponant\n    var opponant = new Player;\n    //push a random unused Pokemon to opponant\n    opponant.pokemonOnHand = populateOpponant(opponant, numOfEnemies);\n    console.log('opponant has ' + opponant.pokemonOnHand.length + ' pokemon');\n    //pokemon they have left able to fight\n    var playersPokemonAlive = player.pokemonOnHand;\n    var opponantsPokemonAlive = opponant.pokemonOnHand;\n    //pokemon currently fighting\n    var playersFightingPokemon = playersPokemonAlive[0];\n    console.log('player chose ' + playersFightingPokemon.name);\n    var opponantsFightingPokemon = opponantsPokemonAlive[0];\n    console.log('opponant chose ' + opponantsFightingPokemon.name);\n    //set fight hp so original hp is not overwritten during fight\n    playersFightingPokemon.fightHp =  playersFightingPokemon.hp;\n    opponantsFightingPokemon.fightHp =  opponantsFightingPokemon.hp;\n  \n    //number of pokemon of currently loosing player - if 0 fight is over\n    var leastPokemonLeft = getLeastPokemon(playersPokemonAlive, opponantsPokemonAlive);\n    // finds pokemon of least health & returns an object containing pokemon of least health and their owner, so can be removed from alive pokemon when health becomes  zero and next is used\n    var leastHp = getLeastHealth(playersFightingPokemon, opponantsFightingPokemon);\n    //player takes first turn\n    var playersTurn = true;\n    //unless someone has no pokemon\n    for(i = leastPokemonLeft; i>0;){\n      //unless pokemon has no health\n      for(i = leastHp.pokemon.fightHp; i>0;){\n        //choose who attacks\n        if (playersTurn){\n          makeAttack(playersFightingPokemon,opponantsFightingPokemon);\n          opponantsFightingPokemon.fightHp -= damage;\n          console.log(playersFightingPokemon.name + ' used ' + playersFightingPokemon.move + ' and did ' + damage + ' damage');\n          playersTurn = false;\n        }else if(!playersTurn){\n          makeAttack(opponantsFightingPokemon,playersFightingPokemon);\n          playersFightingPokemon.fightHp -= damage;\n          console.log(playersFightingPokemon.name + ' used ' + playersFightingPokemon.move + ' and did ' + damage + ' damage');\n          playersTurn = true;\n        } else{\n          console.log('error taking turns');\n        }\n        //update pokemon with least health\n        leastHp = getLeastHealth(playersFightingPokemon, opponantsFightingPokemon);\n        if (leastHp.pokemon.fightHp == 0){\n          console.log(leastHp.pokemon.name + 'fell unconcious');\n        }\n      }\n      //when a pokemon looses all health remove from alive pokemon\n      if (leastHp.fighter == 'player'){\n        playersPokemonAlive.shift()\n        //uses next pokemon (still first because old first is removed)\n        playersFightingPokemon = playersPokemonAlive[0];\n      }else if(leastHp.fighter == 'opponant'){\n        opponantsPokemonAlive.shift()\n        opponantsFightingPokemon = opponantsPokemonAlive[0];\n      }else{\n        console.log('error removing unconcious pokemon');\n      }\n      //update player with least pokemon\n      leastPokemonLeft = getLeastPokemon(playersPokemonAlive, opponantsPokemonAlive);\n    }\n  },\n  makeAttack: function(attaker, defender){\n    defender.fightHp = defender.fightHp - calcDamage(attaker, defender);\n    return defender.fightHp\n  },\n  calcDamage: function(attaker, defender){\n    var base = 20;\n    var bonus = Math.round((attaker.attack - defender.defense)/3);\n    var random = Math.round(Math.random()*(1.2 - 0.8) + 0.8);\n    var damage = base*random+bonus;\n    return damage;\n  },\n\n  populateOpponant: function(opponant, numOfEnemies){\n    for(i = 0; i <= numOfEnemies; i++){\n      opponant.pokemonOnHand.push(unusedPokemon.splice(Math.floor(Math.random()*unusedPokemon.length), 1));\n      return opponant.pokemonOnHand\n    }\n  }\n\n}\n\n\n\n\n\nmodule.exports = Game;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/models/game.js\n// module id = 134\n// module chunks = 0","var Player = function(playerObj){\n  this.name = \"\";\n  this.pokedex = [];//unlimited\n  this.pokemon_on_hand = []//4x\n  this.pic = \"\"//url\n  this.x = 2//600\n  this.y = 2//600\n\n}\n\nPlayer.prototype = {\n  playerGetPokemon: function(pokemon, source, destination){\n    this.destination.push(source[pokemon]);\n  }\n\n};\n\nmodule.exports = Player;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/models/player.js\n// module id = 135\n// module chunks = 0","var Game = require('./models/game');\n\nwindow.onload = function(){\n    var game = new Game();\n\n    game.allPokemon();\n\n};\n\n\n\n\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app.js\n// module id = 244\n// module chunks = 0"],"sourceRoot":""}